Given a string S consisting of opening and closing parenthesis '(' and ')'. Find length of the longest valid parenthesis substring. Constraints: 1 <= N <= 10^5
Input
Each test case have one line string S of character '(' and ')' of length N.
Output
Print the length of the longest valid parenthesis substring.
Example
Input
((()

Output
2

Input
)()())

Output
4
-------------------------------------------------------------------------------------------------------------
import java.util.*; 
      
class Main 
{ 

    static int findMaxLen(String str) 
    { 
        int n = str.length(); 
       
    
        Stack<Integer> stk = new Stack<>(); 
        stk.push(-1); 
    
        int result = 0; 
       
        for (int i=0; i<n; i++) 
        { 
             
            if (str.charAt(i) == '(') 
              stk.push(i); 
       
            else
            { 
            
                stk.pop(); 
    
                if (!stk.empty()) 
                    result = Math.max(result, i - stk.peek()); 
    
                else stk.push(i); 
            } 
        } 
       
        return result; 
    } 
      
    public static void main(String[] args)  
    { 
       Scanner scan = new Scanner(System.in);
       String str = scan.nextLine();
        System.out.println(findMaxLen(str)); 
       
       
    } 
}
